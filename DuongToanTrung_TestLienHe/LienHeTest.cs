// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using OfficeOpenXml;
using System.IO;
using OfficeOpenXml.Style;

namespace DuongToanTrung_TestLienHe
{
    [TestFixture]
    public class LienHeTest
    {
        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            driver = new ChromeDriver();
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }

        [TearDown]
        public void TeardownTest()
        {
            // Đóng trình duyệt sau khi kiểm thử hoàn thành
            if (driver != null)
            {
                //driver.Quit();
                Thread.Sleep(2000);
                driver.Dispose();
            }
        }


        // xuất file testcase
        

    public void ExportToExcel(string senario, string summary, string testCaseId, string resultTestCase)
    {
        string filePath = "C:\\Users\\SenetUser\\Desktop\\DuongToanTrung_TestLienHe\\LienHe_TestSelenium.xlsx";

        FileInfo fileInfo = new FileInfo(filePath);

        // Tạo hoặc mở file Excel
        using (ExcelPackage package = new ExcelPackage(fileInfo))
        {
            ExcelWorksheet worksheet = package.Workbook.Worksheets.FirstOrDefault();

            // Nếu không có worksheet, tạo một worksheet mới
            if (worksheet == null)
            {
                worksheet = package.Workbook.Worksheets.Add("LienHe_TestSelenium");

                    // Tạo header và ghi in hoa
                    worksheet.Cells["A1"].Value = "Test Title /Senario".ToUpper();
                    worksheet.Cells["B1"].Value = "Test Summary ".ToUpper(); ;
                    worksheet.Cells["C1"].Value = "Test Case ID".ToUpper(); ;
                    worksheet.Cells["D1"].Value = "TestCase".ToUpper(); ;

                    // Tô đậm header
                    using (ExcelRange rng = worksheet.Cells["A1:D1"])
                    {
                        rng.Style.Font.Bold = true;
                    }
                }

                // Tìm dòng tiếp theo trống
                int rowIndex = worksheet.Dimension.End.Row + 1;

            // Đổ dữ liệu vào các cột
            worksheet.Cells[rowIndex, 1].Value = senario;
            worksheet.Cells[rowIndex, 2].Value = summary;
            worksheet.Cells[rowIndex, 3].Value = testCaseId;
            worksheet.Cells[rowIndex, 4].Value = resultTestCase;

            // Thêm border cho dòng vừa thêm
            worksheet.Cells[rowIndex, 1, rowIndex, 4].Style.Border.Top.Style = ExcelBorderStyle.Thin;
            worksheet.Cells[rowIndex, 1, rowIndex, 4].Style.Border.Left.Style = ExcelBorderStyle.Thin;
            worksheet.Cells[rowIndex, 1, rowIndex, 4].Style.Border.Right.Style = ExcelBorderStyle.Thin;
            worksheet.Cells[rowIndex, 1, rowIndex, 4].Style.Border.Bottom.Style = ExcelBorderStyle.Thin;

            // Căn lề tự động
            worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();

            // Lưu file Excel
            package.Save();
        }
    }



    //TestCase Hợp lệ
    [TestCase("Kiểm tra liên hệ nhập đầy đủ thông tin ","TC001",
                    "Dương Toàn Trung", "0928862227", "toantrung123@gmail", "tư vấn", "cần tư vấn điện thoại")]




        //TestCase Không Hợp lệ 
        [TestCase("Kiểm tra chức năng liên hệ nhập thiếu tên ","TC002",
                    "", "0928862227", "toantrung123@gmail", "tư vấn", "cần tư vấn điện thoại")]
        public void lienHe(string summary, string id_testcase,
                            string name, string sdt, string gmail, string title, string sub)
        {
            driver.Navigate().GoToUrl("http://127.0.0.1:5501/index.html");
            driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);
            driver.FindElement(By.LinkText("Liên hệ")).Click();
            driver.FindElement(By.Name("ht")).Click();
            driver.FindElement(By.Name("ht")).SendKeys(name);
            driver.FindElement(By.Name("sdt")).Click();
            driver.FindElement(By.Name("sdt")).SendKeys(sdt);
            driver.FindElement(By.Name("em")).Click();
            driver.FindElement(By.Name("em")).SendKeys(gmail);
            driver.FindElement(By.Name("tde")).Click();
            driver.FindElement(By.Name("tde")).SendKeys(title);
            driver.FindElement(By.Name("nd")).Click();
            driver.FindElement(By.Name("nd")).SendKeys(sub);
            driver.FindElement(By.CssSelector("button:nth-child(1)")).Click();

            string senario = "Lien_He";


            // bắt kết quả thông báo
            try
            {
                IWebElement alertDiv = driver.FindElement(By.Id("alert"));
                bool isCloseButtonPresent = alertDiv.FindElement(By.Id("closebtn")).Displayed;
                if (alertDiv.Displayed && isCloseButtonPresent)
                {
                    Console.WriteLine("Test case passed: Success message found!");
                    ExportToExcel(senario, summary, id_testcase, "Pass");
                }
                else
                {
                    Console.WriteLine("Test case failed: Success message not found!");
                    ExportToExcel(senario, summary, id_testcase, "Fail");
                    Assert.Fail("Success message not found!");
                }
            }
            catch (NoSuchElementException ex)
            {
                Console.WriteLine("Không tìm thấy phần tử có id là 'alert': " + ex.Message);
                Assert.Fail("Test case failed: 'alert' element not found!");
            }


            //xuất kết quả testcase ra excel 
            

        }
    }
}
